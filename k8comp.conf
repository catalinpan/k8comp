# Application configs main folder
k8comp_dir=/opt/k8comp

# Hiera custom location
custom_hiera=/opt/k8comp/hiera.yaml

# Location of the main YAML configuration files. The files should be unprocessed files containing the variables in the format %{variable}
projects_path=/opt/k8comp/projects

# Enable fail on variable not found
# Default to false
var_fail_safe=false

# Enable multiple environments. A git branch represents an environment
# If no environments are found it will fail to disabled behaviour trying to deploy the files from projects/<project>....
# values: enabled/disabled
k8comp_environments=disabled

# The option requires a valid ssh key to pull from the remote repos.
# If the option is set to true it will pull from remote on every deployment
# values: true/false
auto_git_pull=false

# Set default branch for all the deployments
main_deployment_branch=master

# If only projects_repo is present all the files should be on the git root.
# k8comp assumes that project and hieradata are both in the same repository and the
# folder should be present in the repository
# example folder structure:
# git root projects with hieradata included:
#  projects
#  └── galaxies
#      ├── andromeda
#          ├── rc.yaml
#          └── service.yaml
#  hieradata
#  ├── apps
#  │   ├── galaxies
#  │   │   ├── andromeda
#  │   │   │   └── development.yaml
#  │   │   └── andromeda.yaml
#  │   └── galaxies.yaml
#  └── common.yaml
# If hieradata_repo is present also k8comp assumes that the projects and hieradata are on separate repositories
# and the files should be available on the repository root (no projects or hieradata folders are expected)
# example folder structure:
# git root projects:
#  galaxies
#   ├── andromeda
#       ├── rc.yaml
#       └── service.yaml
# git root hieradata:
#  apps
#   │   ├── galaxies
#   │   │   ├── andromeda
#   │   │   │   └── development.yaml
#   │   │   └── andromeda.yaml
#   │   └── galaxies.yaml
#   └── common.yaml
projects_repo=
hieradata_repo=
