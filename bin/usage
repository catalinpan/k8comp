#!/bin/bash
usage() {
 message_green "
 Usage: $programname [-h | pull | -p <project_name> -a <application> -e <environment> -b <git_branch>]

 Supported formats: yaml, yml, json

 Mandatory variables -p <project_name>

 -h | --help :                           Display usage information.
 -p | --project <project_name> :         Project name as specified on the projects folder.
                                         Configuration specified in k8comp.conf.
                                         Current projects path ${projects_path}.
                                         If only <project> or <project> and <environment> are
                                         specified the deployment will be from
                                         ${projects_path}/<project>.* file

 -a | --application <application> :      The name of the application which need to be deployed.
                                         <application> file has priority over <application> folder.
                                         If ${projects_path}/<project>/<application>.* file is present
                                         the deployment will be from that file.
                                         If there is no file in the above mentioned location the
                                         deployment will be from ${projects_path}/<project>/<application>/ folder.
                                         There are no naming restrictions for the files from
                                         ${projects_path}/<project>/<application>/ folder.
                                         If no <application> is specified in the cmd the deployment
                                         will be from ${projects_path}/<project>.* file.

 -e | --environment <environment> :      The environment will be checked from hiera. If no values are
                                         found in hiera the variables will not be replaced.
                                         NOT PART OF projects FILE STRUCTURE but can be added as
                                         variable in the yaml|yml|json template.
                                         Available only in hiera

 -l | --location <location> :            The location will be checked from hiera. If no values are
                                         found in hiera the variables will not be replaced.
                                         NOT PART OF projects FILE STRUCTURE but can be added as
                                         variable in the yaml|yml|json template.
                                         Available only in hiera

 -x | --xtra <variable> :                The variable specified on the cmd run will be used to update
                                         a value on the final deployment file.
                                         This will have priority over hiera value. Is not mandatory
                                         to be specified.
                                         The format is variable=value.

 -b | --branch <variable> :              Specify a branch from where to do the deployment.
                                         It requires k8comp_environments to be

 pull | --pull :                         If k8comp_environments is enabled and auto_git_pull is false
                                         use >k8comp pull< without any arguments to pull main_deployment_branch or >k8comp pull -b your_branch< for
                                         a specific git branch.
                                         For pulling via ssh make sure the private key is available
                                         on the server/container.

 Examples:
  k8comp pull
  k8comp pull -b test_branch

  k8comp -p project -a application -e development -b test_branch | kubectl apply -f -
  k8comp -p project -a application/rc
  k8comp -p project -e development
  k8comp -p project
  k8comp -p project -a application -e development -x var1=value1 -x var2=value2 | kubectl create -f -
  k8comp -p project -a application -x var1=value1 -x var2=value2 | kubectl apply -f -

  Dry run:

  k8comp -p project -a application -e development
  k8comp -p project -a application -e development -x var1=value1
  "
}
